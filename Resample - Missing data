# SA-noBH-Time
To resmalibrary(affy)
library(survival)
print("Do you wish to reuse a previously loaded data file - yes=(y)?")
Fl<-readLines(con = stdin(), n = 1, ok = TRUE)ple survival time for CoxPH model without Benjamini Hochberg correction
nitt<-10
percentchange<-20 # percent patients to change data for
timechange<-1 # We will need to try various numbers of years you add/subtract to survival times, 1 year is used in this case. 
if(Fl!="y") {
print("CHOOSE FILE")
FileChoice<-file.choose() # choose input file
a <- read.delim(FileChoice, skip=0, sep="\t", as.is=TRUE, header=FALSE)
print("FIle is read")
b<-t(a)
colnames(b)<-b[1,]
b<-b[-1,]
CCC<-b[,4:length(b[1,])]
time<-as.numeric(b[,2])
status<-as.numeric(b[,3])
}
outt<-matrix(NA,nrow=length(CCC[1,]),ncol=(nitt+1))
outt[,1]<-colnames(CCC)
l<-length(CCC[1,]) # number of genes
np<-length(time) # number of patients
rn<-round(np*percentchange/100) # number of patients for whom to replace data
for (itcounter in 1:nitt) {
#remove 'percentchange' of patient surv times with surv time
resampstatus<-status
resampstatus[sample(1:length(status),rn)]<-NA
resamptime <- time
for (counter in 1:l) {
if(trunc(counter/100)== counter/100){
 print(paste("itteration", itcounter,"      gene", counter))
}
x<-CCC[,counter];	y<-data.frame(cbind(resamptime,resampstatus,x))
z<-as.matrix(y$resamptime); y$resamptime <-as.numeric(z)
z<-as.matrix(y$resampstatus); y$resampstatus<-as.numeric(z)
z<-as.matrix(y$x);y$x<-as.numeric(z)
x<-as.numeric(x)
k<-coxph( Surv(resamptime, resampstatus) ~ x, y)
d<-summary(k);outt[counter,itcounter +1]<-d$coef[5]
	}
	}
outd<-rbind(c("gene or Principal Component",paste("itteration",1:nitt,sep="")),outt)
write.table(outd,file="resmapled_survival.txt", sep="\t", row.names=FALSE, col.names=FALSE,append=TRUE) # write resampled p values out

# For BH correction
# Input file is the resampled_survival file without BH correction 

input = read.delim("resampled_survival.txt", header = TRUE)
dim(input)

probe = input[,1]
probe.mat = as.matrix(probe)

output = matrix(data=NA, nrow= 22277, ncol=1001)

for (i in 2:1001)
{ 
count = input[,i]
output[,i] = p.adjust(count, method = "BH", n = length(count))
print(i)
}

output.final = cbind(probe.mat, output)

write.table(output.final, "BH_conversion.txt", sep="\t", row.names=TRUE, col.names=TRUE, append=TRUE, quote = FALSE)
